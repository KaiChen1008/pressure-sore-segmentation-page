{"version":3,"sources":["Loading.js","SelectImage.js","ShowImage.js","WaitClassifying.js","Display.js","apis/api.js","states/MainAction.js","MainScreen.js","states/MainReducer.js","App.js","index.js"],"names":["makeStyles","theme","backdrop","zIndex","drawer","color","root","minWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","Transition","React","forwardRef","props","ref","react_default","a","createElement","Slide","Object","assign","direction","SelectImage","Dialog","open","TransitionComponent","keepMounted","onClose","handleFileChange","DialogTitle","DialogContent","react","Form","Group","controlId","Control","onChange","type","accept","className","ShowImage","_useState","useState","_useState2","slicedToArray","setOpen","handleClose","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","classifyImage","stop","apply","this","arguments","esm_Image","src","file","r","TextField","label","e","handleXChange","autoFocus","Button","onClick","useStyles","WaitClassifying","classes","console","log","Backdrop","Card","CardContent","Typography","gutterBottom","Display","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_this$props","fileImage","masks","stageHeight","window","innerHeight","stageWidth","innerWidth","originImageWidth","width","scaling","imageWidth","imageHeight","height","ReactKonva","image","scaleX","scaleY","x","length","visible","text","concat","area","y","granulation","is_reep","Component","connect","state","objectSpread","main","base_url","uploadImageApi","_x","_x2","_uploadImageApi","formData","res","mask","mask1","FormData","append","axios","post","headers","Content-Type","sent","data","Image","abrupt","endUploadImage","uploading","MainScreen","_this","target","files","imageObj","fileURL","URL","createObjectURL","dispatch","fileData","fileName","name","value","setXValue","classifyLocalImage","CropperRef","createRef","CanvasRef","ShowImage_ShowImage","src_Display","initMainState","count","store","createStore","combineReducers","undefined","action","compose","applyMiddleware","thunkMiddleware","App","react_redux_es","src_MainScreen_0","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.6d153e2a.chunk.js","sourcesContent":["import React from 'react';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n}));\n\nexport default function Loading(props) {\n  const classes = useStyles();\n  return (\n    <div>\n      <Backdrop className={classes.backdrop} open={props.open}>\n        <Card>\n            <CardContent>\n                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                    Loading Model...\n                </Typography>\n            </CardContent>\n\n        </Card>\n        {/* <CircularProgress color=\"inherit\" /> */}\n      </Backdrop>\n    </div>\n  );\n}\n","import React , {Fragment} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport { Form, Image} from 'react-bootstrap';\nimport { Input } from '@material-ui/core';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function SelectImage(props) {\n\n  return (\n    <div>\n      <Dialog\n        open={props.open}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={props.handleFileChange}\n      >\n        <DialogTitle> {\"Select Image File\"} </DialogTitle>\n        <DialogContent>\n            <Fragment>\n                <Form.Group controlId=\"file\">\n                    <Form.Control\n                        onChange={props.handleFileChange}\n                        type=\"file\"\n                        accept=\"image/*\"\n                        className=\"imagefile\" />\n                </Form.Group>\n            </Fragment>\n        </DialogContent>\n\n      </Dialog>\n    </div>\n  );\n}","import React , {Fragment,useState, useEffect } from 'react';\nimport Button         from '@material-ui/core/Button';\nimport Dialog         from '@material-ui/core/Dialog';\nimport DialogContent  from '@material-ui/core/DialogContent';\nimport Slide          from '@material-ui/core/Slide';\nimport TextField      from '@material-ui/core/TextField';\nimport { Form, Image} from 'react-bootstrap';\nimport './ShowImage.css'\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function ShowImage(props) {\n  const [open, setOpen] = useState(true);\n\n  const handleClose = async () => {\n    setOpen(false);\n    await props.classifyImage();\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={props.open && open}\n        TransitionComponent={Transition}\n        onClose={props.classifyImage}\n      >\n        <DialogContent>\n            <Fragment>\n                <Image className=\"selected-image\" src={props.file} ref={props.r} />\n                <div className=\"button-container\">\n                    <TextField label=\"X\"  onChange= {e=> props.handleXChange(e)} autoFocus={true}/>\n                    <Button className='button' onClick={handleClose}>\n                        Classify\n                    </Button>\n                </div>\n            </Fragment>\n        </DialogContent>\n\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: '#fff',\n  },\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n}));\n\nexport default function WaitClassifying(props) {\n  const classes = useStyles();\n  console.log(props.open)\n  return (\n    <div>\n      <Backdrop className={classes.backdrop} open={props.open}>\n        <Card>\n            <CardContent>\n                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                    Classifying...\n                </Typography>\n            </CardContent>\n        </Card>\n      </Backdrop>\n    </div>\n  );\n}\n","import React                    from 'react';\nimport { connect }              from 'react-redux';\nimport { Stage, Layer, Image, Text}  from 'react-konva';\n\nclass Display extends React.Component {\n    \n    constructor(props) {\n        super(props);\n    }\n\n    render() { \n        const {fileImage, masks} = this.props;\n        let stageHeight = window.innerHeight;\n        let stageWidth  = window.innerWidth;\n        let originImageWidth = fileImage.width;\n        let originImageHeight= fileImage.height;\n        let scaling     = (stageWidth/3) / (originImageWidth);\n        let imageWidth  = originImageWidth * scaling;\n        let imageHeight = originImageHeight* scaling;\n        return (\n        <div className=\"display\">\n            <Stage width={stageWidth } height={stageHeight}>\n                <Layer>\n                    <Image  image={fileImage} scaleX={scaling} scaleY={scaling}/>\n                    <Image  image={fileImage} scaleX={scaling} scaleY={scaling}  x = {imageWidth}/>\n                    <Image  image={fileImage} scaleX={scaling} scaleY={scaling}  x = {imageWidth*2}/>\n                </Layer>\n                <Layer>\n                    {\n                        masks.length > 0 && <Image  x = {imageWidth}   image={masks[0]} visible={true} scaleX={scaling} scaleY={scaling}/>\n                    }\n                    {\n                        masks.length > 1 && <Image  x = {imageWidth*2} image={masks[1]} visible={true} scaleX={scaling} scaleY={scaling}/>\n                    }\n                </Layer>\n                <Layer>\n                    <Text text={`Slough Tissue Area: ${this.props.area} cm^2`}     fontSize={35} y={imageHeight + 50} x = {stageWidth/3}/>\n                    <Text text={`Granulation       : ${this.props.granulation} %`} fontSize={35} y={imageHeight + 80} x = {stageWidth/3}/>\n                    <Text text={`Is Re-ep          : ${this.props.is_reep} `}      fontSize={35} y={imageHeight + 120} x = {stageWidth/3}/>\n\n                </Layer>\n\n            </Stage>\n        </div>\n    )};\n\n}\n\n\nexport default connect(state => ({\n    ...state.main,\n}))(Display);","import axios from 'axios'\n\nconst base_url = 'http://clais1.csie.org:3005'\n\nexport async function uploadImageApi(image, x) {\n    var formData = new FormData();\n    formData.append(\"img\", image);\n    formData.append(\"model_id\", \"0\");\n    formData.append(\"x\", x)\n    console.log(x);\n    var res = await axios.post(\n        `${base_url}/predict`, \n        formData,\n        {\n            headers:{\n                'Content-Type': 'multipart/form-data',\n            }\n        }\n    );\n    console.log(res.data);\n\n    var mask = new Image();\n    mask.src = 'data:image/png;base64,' + res.data['0'];\n\n    var mask1 = new Image();\n    mask1.src = 'data:image/png;base64,' + res.data['1'];\n\n    var area = res.data['area']\n    var granulation = res.data['granulation']\n    var is_reep = res.data['is_reep']\n\n\n    // response['area']        = area\n    // response['granulation'] = granulation\n    // response['is_reep']     = is_reep\n\n    return {\n        masks       :[mask,mask1], \n        area        : area,\n        granulation :granulation,\n        is_reep     :is_reep,\n    };\n}","import {uploadImageApi} from '../apis/api.js'\n\nexport function setXValue(x) {\n    return {\n        type        : '@MAIN/SET_X_VALUE',\n        x           : x,\n    }\n}\n\nexport function readImage(file) {\n    return {\n        type        : '@MAIN/READ_IMAGE',\n        fileData    : file.fileData,\n        fileURL     : file.fileURL,\n        fileName    : file.fileName,\n        fileImage   : file.fileImage,\n    }\n}\n\nexport function uploadImage(data) {\n    return async (dispatch, state) => { \n        \n        dispatch(startUploadImage());\n\n        console.log('start classifying')\n        const res = await uploadImageApi(data.fileData, data.x);\n        \n        console.log('finsh classifying');\n\n        dispatch(endUploadImage(res));\n\n    }; \n}\n\nfunction startUploadImage() {\n    return {\n        type        : '@MAIN/START_UPLOAD_IMAGE',\n        uploading   : true,\n    }\n}\n\nfunction endUploadImage(res) {\n    return {\n        type        : '@MAIN/END_UPLOAD_IMAGE',\n        uploading   : false,\n        masks       : res.masks,\n        area        : res.area,\n        granulation : res.granulation,\n        is_reep     : res.is_reep,\n    }\n}","import React, {Fragment}            from 'react';\nimport Loading                      from './Loading';\nimport SelectImage                  from './SelectImage';\nimport ShowImage                    from './ShowImage';\nimport WaitClassifying              from './WaitClassifying';\nimport { connect }                  from 'react-redux';\nimport {Image}                      from 'react-bootstrap';\nimport Display                      from './Display';\n\nimport {readImage, uploadImage, setXValue}     from './states/MainAction';\n\nimport './MainScreen.css';\n\nclass MainScreen extends React.Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.CropperRef = React.createRef()\n        this.CanvasRef  = React.createRef()\n    } \n\n\n    handleFileChange = (e) => {\n        if (e.target.files && e.target.files.length > 0) {\n            var imageObj = new window.Image;\n            var fileURL  = URL.createObjectURL(e.target.files[0]);\n            imageObj.src = fileURL;\n\n            this.props.dispatch( readImage({\n                fileData    : e.target.files[0],\n                fileImage   : imageObj,\n                fileURL     : fileURL,\n                fileName    : e.target.files[0].name,\n            }))\n        \n        }\n    }\n\n    handleXChange = (e) => {\n        var x = e.target.value;\n        this.props.dispatch( setXValue(x));\n    }\n\n    classifyLocalImage = (e) => {\n        this.props.dispatch( uploadImage({\n            fileData: this.props.fileData,\n            x:        this.props.x,\n        }))\n    }\n\n    render() { \n        const {fileURL, fileName, masks, uploading, x} = this.props;\n        return (\n        <div className=\"container\">\n\n            <SelectImage open={!fileURL} handleFileChange={this.handleFileChange}/>\n            \n            <ShowImage open={ fileName !== '' &&  masks.length == 0} file={fileURL} r={this.CropperRef}  handleXChange={this.handleXChange} classifyImage={this.classifyLocalImage}/>   \n            \n            {\n                <WaitClassifying open={uploading}/>\n            }\n            {\n                masks.length > 0 && <Display/>\n            }\n        </div>\n    )};\n\n}\n\n\nexport default connect(state => ({\n    ...state.main,\n}))(MainScreen);","const initMainState = {\n    fileURL: null,\n    fileName: '',\n    fileData: null,\n    fileImage:null,\n    masks:[],\n    uploading: false,\n    count: 0,\n    x:'',\n    area:'',\n    granulation:'',\n    is_reep:'',\n\n};\n\n\nexport function main(state = initMainState, action) {\n    switch (action.type) {\n        case '@MAIN/READ_IMAGE':\n            return {\n                ...state,\n                fileURL     : action.fileURL,\n                fileName    : action.fileName,\n                fileData    : action.fileData,\n                fileImage   : action.fileImage,\n            }\n        \n        case '@MAIN/START_UPLOAD_IMAGE':\n            return {\n                ...state,\n                uploading   : action.uploading,\n            }\n\n        case '@MAIN/END_UPLOAD_IMAGE':\n            return {\n                ...state,\n                uploading   : action.uploading,\n                masks       : action.masks,\n                area        : action.area,\n                granulation : action.granulation,\n                is_reep     : action.is_reep,\n            }\n        \n        case '@MAIN/SET_X_VALUE':\n            return {\n                ...state,\n                x           : action.x,\n            }\n        default:\n            return state;\n    }\n}\n","import React                from 'react'\r\nimport thunkMiddleware      from 'redux-thunk';\r\nimport loggerMiddleware     from 'redux-logger';\r\nimport {Provider, connect}  from 'react-redux';\r\nimport {createStore, combineReducers, compose, applyMiddleware} from 'redux';\r\n\r\nimport MainScreen   from './MainScreen'\r\nimport {main}       from './states/MainReducer'\r\n\r\nimport './App.css';\r\n\r\n\r\n\r\nconst store = createStore(combineReducers({\r\n    main,\r\n}), compose(applyMiddleware(thunkMiddleware)))\r\n\r\nexport default class App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    } \r\n\r\n    render() { \r\n\t\treturn (\r\n            <Provider store={store} className=\"App\">\r\n                <div className='App'>\r\n                    <MainScreen/>\r\n                </div>\r\n                \r\n            </Provider>\r\n\t\t)};\r\n\r\n}","import React    from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App      from './App';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n    // <React.StrictMode>\r\n        <App />\r\n    // </React.StrictMode>\r\n    ,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}