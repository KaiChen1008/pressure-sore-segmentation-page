{"version":3,"sources":["Loading.js","SelectImage.js","ShowImage.js","WaitClassifying.js","apis/api.js","states/MainAction.js","Display.js","MainScreen.js","states/MainReducer.js","App.js","index.js"],"names":["makeStyles","theme","backdrop","zIndex","drawer","color","root","minWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","Transition","React","forwardRef","props","ref","react_default","a","createElement","Slide","Object","assign","direction","SelectImage","Dialog","open","TransitionComponent","keepMounted","onClose","handleFileChange","DialogTitle","DialogContent","react","Form","Group","controlId","Control","onChange","type","accept","className","ShowImage","_useState","useState","_useState2","slicedToArray","setOpen","handleClose","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","classifyImage","stop","apply","this","arguments","esm_Image","src","file","r","Button","onClick","base_url","uploadImageApi","_x","_uploadImageApi","image","formData","res","mask","FormData","append","axios","post","concat","headers","Content-Type","sent","Image","data","abrupt","endReadImage","Display","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_this$props","fileImage","masks","visibleMaskID","stageHeight","window","innerHeight","stageWidth","innerWidth","scaling","width","ReactKonva","height","scaleX","scaleY","length","visible","Component","connect","state","objectSpread","main","MainScreen","_this","e","target","files","imageObj","fileURL","URL","createObjectURL","dispatch","fileData","fileName","name","console","log","_x2","CropperRef","createRef","CanvasRef","ShowImage_ShowImage","classifyLocalImage","src_Display","initMainState","store","createStore","combineReducers","undefined","action","filenName","toConsumableArray","compose","applyMiddleware","thunkMiddleware","App","react_redux_es","src_MainScreen_0","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.7286177a.chunk.js","sourcesContent":["import React from 'react';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n}));\n\nexport default function Loading(props) {\n  const classes = useStyles();\n  return (\n    <div>\n      <Backdrop className={classes.backdrop} open={props.open}>\n        <Card>\n            <CardContent>\n                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                    Loading Model...\n                </Typography>\n            </CardContent>\n\n        </Card>\n        {/* <CircularProgress color=\"inherit\" /> */}\n      </Backdrop>\n    </div>\n  );\n}\n","import React , {Fragment} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport { Form, Image} from 'react-bootstrap';\nimport { Input } from '@material-ui/core';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function SelectImage(props) {\n\n  return (\n    <div>\n      <Dialog\n        open={props.open}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={props.handleFileChange}\n      >\n        <DialogTitle> {\"Select Image File\"} </DialogTitle>\n        <DialogContent>\n            <Fragment>\n                <Form.Group controlId=\"file\">\n                    <Form.Control\n                        onChange={props.handleFileChange}\n                        type=\"file\"\n                        accept=\"image/*\"\n                        className=\"imagefile\" />\n                </Form.Group>\n            </Fragment>\n        </DialogContent>\n\n      </Dialog>\n    </div>\n  );\n}","import React , {Fragment,useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Slide from '@material-ui/core/Slide';\nimport { Form, Image} from 'react-bootstrap';\nimport './ShowImage.css'\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function ShowImage(props) {\n  const [open, setOpen] = useState(true);\n\n  const handleClose = async () => {\n    setOpen(false);\n    await props.classifyImage();\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={props.open && open}\n        TransitionComponent={Transition}\n        onClose={props.classifyImage}\n      >\n        <DialogContent>\n            <Fragment>\n                <Image className=\"selected-image\" src={props.file} ref={props.r} />\n                <div className=\"button-container\">\n                    <Button className='button' onClick={handleClose}>\n                        Classify\n                    </Button>\n                </div>\n            </Fragment>\n        </DialogContent>\n\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: '#fff',\n  },\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n}));\n\nexport default function WaitClassifying(props) {\n  const classes = useStyles();\n  console.log(props.open)\n  return (\n    <div>\n      <Backdrop className={classes.backdrop} open={props.open}>\n        <Card>\n            <CardContent>\n                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                    Classifying...\n                </Typography>\n            </CardContent>\n        </Card>\n      </Backdrop>\n    </div>\n  );\n}\n","import axios from 'axios'\n\nconst base_url = 'http://clais1.csie.org:3005'\n\nexport async function uploadImageApi(image) {\n    var formData = new FormData();\n    formData.append(\"img\", image);\n    formData.append(\"model_id\", \"0\");\n\n    var res = await axios.post(\n        `${base_url}/predict`, \n        formData,\n        {\n            headers:{\n                'Content-Type': 'multipart/form-data',\n                // 'responseType': 'blob',\n            }\n        }\n    );\n\n    var mask = new Image();\n    mask.src = 'data:image/png;base64,' + res.data;\n\n    return mask;\n}","import {uploadImageApi} from '../apis/api.js'\n\nexport function readImage(data) {\n    return async (dispatch, state) => { \n        \n        dispatch(startReadImage(data));\n\n        const mask = await uploadImageApi(data.fileData);\n        console.log('finsh classifying');\n        dispatch(endReadImage(mask));\n\n    }; \n}\n\n\n\nfunction startReadImage(file) {\n    return {\n        type        : '@MAIN/READ_IMAGE',\n        fileData    : file.fileData,\n        fileURL     : file.fileURL,\n        fileName    : file.fileName,\n        fileImage   : file.fileImage,\n    }\n}\n\nfunction endReadImage(mask) {\n    return {\n        type: '@MAIN/END_READ_IMAGE',\n        mask: mask,\n    }\n}","import React                    from 'react';\nimport { connect }              from 'react-redux';\nimport { Stage, Layer, Image}  from 'react-konva';\n// import useImage                 from 'use-image';\n\nclass Display extends React.Component {\n    \n    constructor(props) {\n        super(props);\n    }\n\n    render() { \n        const {fileImage, masks, visibleMaskID} = this.props;\n        let stageHeight = window.innerHeight/2;\n        let stageWidth  = window.innerWidth/2;\n        let scaling     = stageWidth/fileImage.width;\n        return (\n        <div className=\"display\">\n            <Stage width={stageWidth } height={stageHeight}>\n                <Layer>\n                    <Image  image={fileImage} scaleX={scaling} scaleY={scaling}/>\n                </Layer>\n                <Layer>\n                    {\n                        masks.length > 0 && <Image  image={masks[0]} visible={visibleMaskID==0} scaleX={scaling} scaleY={scaling}/>\n                    }\n                    {\n                        masks.length > 1 && <Image  image={masks[1]} visible={visibleMaskID==1} scaleX={scaling} scaleY={scaling}/>\n                    }\n                </Layer>\n\n            </Stage>\n        </div>\n    )};\n\n}\n\n\nexport default connect(state => ({\n    ...state.main,\n}))(Display);","import React, {Fragment}from 'react';\nimport Loading          from './Loading';\nimport SelectImage      from './SelectImage';\nimport ShowImage        from './ShowImage';\nimport WaitClassifying  from './WaitClassifying';\nimport { connect }      from 'react-redux';\nimport {Image}          from 'react-bootstrap';\nimport {readImage}      from './states/MainAction';\nimport Display          from './Display';\nimport './MainScreen.css';\n\nclass MainScreen extends React.Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.CropperRef = React.createRef()\n        this.CanvasRef  = React.createRef()\n    } \n\n\n    handleFileChange = (e) => {\n        if (e.target.files && e.target.files.length > 0) {\n            var imageObj = new window.Image;\n            var fileURL  = URL.createObjectURL(e.target.files[0]);\n            imageObj.src = fileURL;\n\n            this.props.dispatch( readImage({\n                fileData    : e.target.files[0],\n                fileImage   : imageObj,\n                fileURL     : fileURL,\n                fileName    : e.target.files[0].name,\n            }))\n        \n        }\n    }\n\n    render() { \n        const {fileURL, fileName, masks } = this.props;\n        return (\n        <div className=\"container\">\n\n            <SelectImage open={!fileURL} handleFileChange={this.handleFileChange}/>\n\n            <ShowImage open={ fileName !== '' &&  masks.length == 0} file={fileURL} r={this.CropperRef} classifyImage={this.classifyLocalImage}/>   \n            \n            { \n                false && <WaitClassifying  open={this.state.isClassifying}/>\n            }\n            {\n                masks.length > 0 && <Display/>\n            }\n        </div>\n    )};\n\n}\n\n\nexport default connect(state => ({\n    ...state.main,\n}))(MainScreen);","const initMainState = {\n    fileURL: null,\n    fileName: '',\n    fileData: null,\n    fileImage:null,\n    masks:[],\n    visibleMaskID: 0,\n};\n\n\nexport function main(state = initMainState, action) {\n    switch (action.type) {\n        case '@MAIN/READ_IMAGE':\n            return {\n                ...state,\n                fileURL  : action.fileURL,\n                filenName: action.fileName,\n                fileData : action.fileData,\n                fileImage: action.fileImage,\n            }\n\n        case '@MAIN/END_READ_IMAGE':\n            return {\n                ...state,\n                masks: [action.mask, ...state.masks]\n            }\n        default:\n            return state;\n    }\n}\n","import React                from 'react'\r\nimport thunkMiddleware      from 'redux-thunk';\r\nimport loggerMiddleware     from 'redux-logger';\r\nimport {Provider, connect}  from 'react-redux';\r\nimport {createStore, combineReducers, compose, applyMiddleware} from 'redux';\r\n\r\nimport MainScreen   from './MainScreen'\r\nimport {main}       from './states/MainReducer'\r\n\r\nimport './App.css';\r\n\r\n\r\n\r\nconst store = createStore(combineReducers({\r\n    main,\r\n}), compose(applyMiddleware(thunkMiddleware)))\r\n\r\nexport default class App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    } \r\n\r\n    render() { \r\n\t\treturn (\r\n            <Provider store={store} className=\"App\">\r\n                <div className='App'>\r\n                    <MainScreen/>\r\n                </div>\r\n                \r\n            </Provider>\r\n\t\t)};\r\n\r\n}","import React    from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App      from './App';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n    // <React.StrictMode>\r\n        <App />\r\n    // </React.StrictMode>\r\n    ,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}